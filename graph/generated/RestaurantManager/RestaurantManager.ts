// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class DropCreated extends ethereum.Event {
  get params(): DropCreated__Params {
    return new DropCreated__Params(this);
  }
}

export class DropCreated__Params {
  _event: DropCreated;

  constructor(event: DropCreated) {
    this._event = event;
  }

  get dropId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get restaurantId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get mintPrice(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get startDate(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get dailyStartTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get dailyEndTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get windowDuration(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get reservationsPerWindow(): i32 {
    return this._event.parameters[8].value.toI32();
  }
}

export class DropIsActive extends ethereum.Event {
  get params(): DropIsActive__Params {
    return new DropIsActive__Params(this);
  }
}

export class DropIsActive__Params {
  _event: DropIsActive;

  constructor(event: DropIsActive) {
    this._event = event;
  }

  get dropId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isActive(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ReservNFTAddressSet extends ethereum.Event {
  get params(): ReservNFTAddressSet__Params {
    return new ReservNFTAddressSet__Params(this);
  }
}

export class ReservNFTAddressSet__Params {
  _event: ReservNFTAddressSet;

  constructor(event: ReservNFTAddressSet) {
    this._event = event;
  }

  get reservNFTAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class RestaurantIsActive extends ethereum.Event {
  get params(): RestaurantIsActive__Params {
    return new RestaurantIsActive__Params(this);
  }
}

export class RestaurantIsActive__Params {
  _event: RestaurantIsActive;

  constructor(event: RestaurantIsActive) {
    this._event = event;
  }

  get restaurantId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isActive(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class RestaurantRegistered extends ethereum.Event {
  get params(): RestaurantRegistered__Params {
    return new RestaurantRegistered__Params(this);
  }
}

export class RestaurantRegistered__Params {
  _event: RestaurantRegistered;

  constructor(event: RestaurantRegistered) {
    this._event = event;
  }

  get restaurantId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get businessAddress(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class RestaurantManager__dropsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: i32;
  value9: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: i32,
    value9: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8))
    );
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    return map;
  }

  getDropId(): BigInt {
    return this.value0;
  }

  getRestaurantId(): BigInt {
    return this.value1;
  }

  getMintPrice(): BigInt {
    return this.value2;
  }

  getStartDate(): BigInt {
    return this.value3;
  }

  getEndDate(): BigInt {
    return this.value4;
  }

  getDailyStartTime(): BigInt {
    return this.value5;
  }

  getDailyEndTime(): BigInt {
    return this.value6;
  }

  getWindowDuration(): BigInt {
    return this.value7;
  }

  getReservationsPerWindow(): i32 {
    return this.value8;
  }

  getIsActive(): boolean {
    return this.value9;
  }
}

export class RestaurantManager__getDropResultValue0Struct extends ethereum.Tuple {
  get dropId(): BigInt {
    return this[0].toBigInt();
  }

  get restaurantId(): BigInt {
    return this[1].toBigInt();
  }

  get mintPrice(): BigInt {
    return this[2].toBigInt();
  }

  get startDate(): BigInt {
    return this[3].toBigInt();
  }

  get endDate(): BigInt {
    return this[4].toBigInt();
  }

  get dailyStartTime(): BigInt {
    return this[5].toBigInt();
  }

  get dailyEndTime(): BigInt {
    return this[6].toBigInt();
  }

  get windowDuration(): BigInt {
    return this[7].toBigInt();
  }

  get reservationsPerWindow(): i32 {
    return this[8].toI32();
  }

  get isActive(): boolean {
    return this[9].toBoolean();
  }
}

export class RestaurantManager__getRestaurantResultValue0Struct extends ethereum.Tuple {
  get owner(): Address {
    return this[0].toAddress();
  }

  get name(): string {
    return this[1].toString();
  }

  get businessAddress(): string {
    return this[2].toString();
  }

  get isActive(): boolean {
    return this[3].toBoolean();
  }
}

export class RestaurantManager__restaurantsResult {
  value0: Address;
  value1: string;
  value2: string;
  value3: boolean;

  constructor(
    value0: Address,
    value1: string,
    value2: string,
    value3: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    return map;
  }

  getOwner(): Address {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getBusinessAddress(): string {
    return this.value2;
  }

  getIsActive(): boolean {
    return this.value3;
  }
}

export class RestaurantManager extends ethereum.SmartContract {
  static bind(address: Address): RestaurantManager {
    return new RestaurantManager("RestaurantManager", address);
  }

  dropToTimeSlotReservationCount(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "dropToTimeSlotReservationCount",
      "dropToTimeSlotReservationCount(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_dropToTimeSlotReservationCount(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "dropToTimeSlotReservationCount",
      "dropToTimeSlotReservationCount(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  drops(param0: BigInt): RestaurantManager__dropsResult {
    let result = super.call(
      "drops",
      "drops(uint256):(uint256,uint256,uint256,uint64,uint64,uint32,uint32,uint32,uint16,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new RestaurantManager__dropsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toI32(),
      result[9].toBoolean()
    );
  }

  try_drops(
    param0: BigInt
  ): ethereum.CallResult<RestaurantManager__dropsResult> {
    let result = super.tryCall(
      "drops",
      "drops(uint256):(uint256,uint256,uint256,uint64,uint64,uint32,uint32,uint32,uint16,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RestaurantManager__dropsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toI32(),
        value[9].toBoolean()
      )
    );
  }

  getDrop(dropId: BigInt): RestaurantManager__getDropResultValue0Struct {
    let result = super.call(
      "getDrop",
      "getDrop(uint256):((uint256,uint256,uint256,uint64,uint64,uint32,uint32,uint32,uint16,bool))",
      [ethereum.Value.fromUnsignedBigInt(dropId)]
    );

    return changetype<RestaurantManager__getDropResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getDrop(
    dropId: BigInt
  ): ethereum.CallResult<RestaurantManager__getDropResultValue0Struct> {
    let result = super.tryCall(
      "getDrop",
      "getDrop(uint256):((uint256,uint256,uint256,uint64,uint64,uint32,uint32,uint32,uint16,bool))",
      [ethereum.Value.fromUnsignedBigInt(dropId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<RestaurantManager__getDropResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getDropIDsByRestaurant(restaurantId: BigInt): Array<BigInt> {
    let result = super.call(
      "getDropIDsByRestaurant",
      "getDropIDsByRestaurant(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(restaurantId)]
    );

    return result[0].toBigIntArray();
  }

  try_getDropIDsByRestaurant(
    restaurantId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getDropIDsByRestaurant",
      "getDropIDsByRestaurant(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(restaurantId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getRestaurant(
    restaurantId: BigInt
  ): RestaurantManager__getRestaurantResultValue0Struct {
    let result = super.call(
      "getRestaurant",
      "getRestaurant(uint256):((address,string,string,bool))",
      [ethereum.Value.fromUnsignedBigInt(restaurantId)]
    );

    return changetype<RestaurantManager__getRestaurantResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getRestaurant(
    restaurantId: BigInt
  ): ethereum.CallResult<RestaurantManager__getRestaurantResultValue0Struct> {
    let result = super.tryCall(
      "getRestaurant",
      "getRestaurant(uint256):((address,string,string,bool))",
      [ethereum.Value.fromUnsignedBigInt(restaurantId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<RestaurantManager__getRestaurantResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getRestaurantDropCount(restaurantId: BigInt): BigInt {
    let result = super.call(
      "getRestaurantDropCount",
      "getRestaurantDropCount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(restaurantId)]
    );

    return result[0].toBigInt();
  }

  try_getRestaurantDropCount(
    restaurantId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRestaurantDropCount",
      "getRestaurantDropCount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(restaurantId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTimeSlotReservationCount(
    dropId: BigInt,
    reservationTimestamp: BigInt
  ): BigInt {
    let result = super.call(
      "getTimeSlotReservationCount",
      "getTimeSlotReservationCount(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(dropId),
        ethereum.Value.fromUnsignedBigInt(reservationTimestamp)
      ]
    );

    return result[0].toBigInt();
  }

  try_getTimeSlotReservationCount(
    dropId: BigInt,
    reservationTimestamp: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTimeSlotReservationCount",
      "getTimeSlotReservationCount(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(dropId),
        ethereum.Value.fromUnsignedBigInt(reservationTimestamp)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  restaurantDropCount(param0: BigInt): BigInt {
    let result = super.call(
      "restaurantDropCount",
      "restaurantDropCount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_restaurantDropCount(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "restaurantDropCount",
      "restaurantDropCount(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  restaurants(param0: BigInt): RestaurantManager__restaurantsResult {
    let result = super.call(
      "restaurants",
      "restaurants(uint256):(address,string,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new RestaurantManager__restaurantsResult(
      result[0].toAddress(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBoolean()
    );
  }

  try_restaurants(
    param0: BigInt
  ): ethereum.CallResult<RestaurantManager__restaurantsResult> {
    let result = super.tryCall(
      "restaurants",
      "restaurants(uint256):(address,string,string,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new RestaurantManager__restaurantsResult(
        value[0].toAddress(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBoolean()
      )
    );
  }
}

export class CreateDropCall extends ethereum.Call {
  get inputs(): CreateDropCall__Inputs {
    return new CreateDropCall__Inputs(this);
  }

  get outputs(): CreateDropCall__Outputs {
    return new CreateDropCall__Outputs(this);
  }
}

export class CreateDropCall__Inputs {
  _call: CreateDropCall;

  constructor(call: CreateDropCall) {
    this._call = call;
  }

  get restaurantId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get mintPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get startDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get dailyStartTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get dailyEndTime(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get windowDuration(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get reservationsPerWindow(): i32 {
    return this._call.inputValues[7].value.toI32();
  }
}

export class CreateDropCall__Outputs {
  _call: CreateDropCall;

  constructor(call: CreateDropCall) {
    this._call = call;
  }
}

export class RegisterRestaurantCall extends ethereum.Call {
  get inputs(): RegisterRestaurantCall__Inputs {
    return new RegisterRestaurantCall__Inputs(this);
  }

  get outputs(): RegisterRestaurantCall__Outputs {
    return new RegisterRestaurantCall__Outputs(this);
  }
}

export class RegisterRestaurantCall__Inputs {
  _call: RegisterRestaurantCall;

  constructor(call: RegisterRestaurantCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get businessAddress(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterRestaurantCall__Outputs {
  _call: RegisterRestaurantCall;

  constructor(call: RegisterRestaurantCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetDropIsActiveCall extends ethereum.Call {
  get inputs(): SetDropIsActiveCall__Inputs {
    return new SetDropIsActiveCall__Inputs(this);
  }

  get outputs(): SetDropIsActiveCall__Outputs {
    return new SetDropIsActiveCall__Outputs(this);
  }
}

export class SetDropIsActiveCall__Inputs {
  _call: SetDropIsActiveCall;

  constructor(call: SetDropIsActiveCall) {
    this._call = call;
  }

  get dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get isActive(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetDropIsActiveCall__Outputs {
  _call: SetDropIsActiveCall;

  constructor(call: SetDropIsActiveCall) {
    this._call = call;
  }
}

export class SetReservNFTAddressCall extends ethereum.Call {
  get inputs(): SetReservNFTAddressCall__Inputs {
    return new SetReservNFTAddressCall__Inputs(this);
  }

  get outputs(): SetReservNFTAddressCall__Outputs {
    return new SetReservNFTAddressCall__Outputs(this);
  }
}

export class SetReservNFTAddressCall__Inputs {
  _call: SetReservNFTAddressCall;

  constructor(call: SetReservNFTAddressCall) {
    this._call = call;
  }

  get _reservNFTAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetReservNFTAddressCall__Outputs {
  _call: SetReservNFTAddressCall;

  constructor(call: SetReservNFTAddressCall) {
    this._call = call;
  }
}

export class SetRestaurantIsActiveCall extends ethereum.Call {
  get inputs(): SetRestaurantIsActiveCall__Inputs {
    return new SetRestaurantIsActiveCall__Inputs(this);
  }

  get outputs(): SetRestaurantIsActiveCall__Outputs {
    return new SetRestaurantIsActiveCall__Outputs(this);
  }
}

export class SetRestaurantIsActiveCall__Inputs {
  _call: SetRestaurantIsActiveCall;

  constructor(call: SetRestaurantIsActiveCall) {
    this._call = call;
  }

  get restaurantId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get isActive(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetRestaurantIsActiveCall__Outputs {
  _call: SetRestaurantIsActiveCall;

  constructor(call: SetRestaurantIsActiveCall) {
    this._call = call;
  }
}

export class SetTimeSlotReservationCountCall extends ethereum.Call {
  get inputs(): SetTimeSlotReservationCountCall__Inputs {
    return new SetTimeSlotReservationCountCall__Inputs(this);
  }

  get outputs(): SetTimeSlotReservationCountCall__Outputs {
    return new SetTimeSlotReservationCountCall__Outputs(this);
  }
}

export class SetTimeSlotReservationCountCall__Inputs {
  _call: SetTimeSlotReservationCountCall;

  constructor(call: SetTimeSlotReservationCountCall) {
    this._call = call;
  }

  get dropId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get reservationTimestamp(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get count(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SetTimeSlotReservationCountCall__Outputs {
  _call: SetTimeSlotReservationCountCall;

  constructor(call: SetTimeSlotReservationCountCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
